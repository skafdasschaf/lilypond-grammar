'name': 'LilyPond-figuregroup'
'patterns': [
  {
    'begin': '(<)'
    'beginCaptures':
      '1':
        'name': 'constant.numeric.fbgroupopen.lilypond'
    'end': '(>)(\\s*(128|64|32|16|8|4|2|1|\\breve|\\longa|\\maxima)(\\s*[.]\\s*)*((\\s*\\*\\s*\\d+(\\/\\d+)?)+)?)?'
    'endCaptures':
      '1':
        'name': 'constant.numeric.fbgroupclose.lilypond'
      '2':
        'name': 'keyword.note.duration.lilypond'
    'name': 'meta.lilypond.figuregroup'
    'patterns': [
      {
        'include': 'source.lilypond-markupmode'
      }
      {
        'include': '#group'
      }
      {
        'include': '#figure'
      }
      {
        'include': '#macro'
      }
    ]
  }
  {
    'content': 'Rests and repetitions in figuremode'
    'match': '(r|q|s)(\\s*(128|64|32|16|8|4|2|1|\\breve|\\longa|\\maxima)(\\s*[.]\\s*)*((\\s*\\*\\s*\\d+(\\/\\d+)?)+)?)?'
    'captures':
      '1':
        'name': 'keyword.note.name.lilypond'
      '2':
        'name': 'keyword.note.duration.lilypond'
  }
  {
    'include': 'source.lilypond-schememode'
  }
]
'repository':
  'figure':
    'content': 'Figured bass figure, optinally followed by an accidental and explicit line delimiter'
    'match': '(\\d+|_)(!|\\+\\+|--|\\+|-|/|\\\\\\+|\\\\\\\\)?(\\\\!)?'
    'captures':
      '1':
        'name': 'keyword.fbfigure.lilypond'
      '2':
        'name': 'keyword.fbaccidental.lilypond'
      '3':
        'name': 'keyword.fbaccidental.lilypond'
  'group':
    'content': 'Vertical brackets grouping figured bass figures'
    'match': '(\\[)|(\\])'
    'name': 'keyword.operator.figuregroup.brackets'
  'macro':
    'content': 'Macros used instead of figures'
    'match': '\\\\(t|tllur|l)(?![a-zA-Z])'
    'name': 'keyword.fbmacro.lilypond'
'scopeName': 'source.lilypond-figuregroup'
